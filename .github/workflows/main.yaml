name: Unity Actions
'on':
  push:
    branches: &ref_0
      - main
  pull_request:
    branches: *ref_0
  workflow_dispatch: {}
jobs:
  checklicense:
    name: Check for UNITY_LICENSE in GitHub Secrets
    runs-on: ubuntu-latest
    outputs:
      is_unity_license_set: ${{ steps.checklicense_job.outputs.is_unity_license_set }}
    steps:
      - name: Check whether unity activation requests should be done
        id: checklicense_job
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        run: |-
          echo "Skip activation job: ${{ env.UNITY_LICENSE != '' }}"
          export is_unity_license_set="${{ env.UNITY_LICENSE != '' }}"
          echo "is_unity_license_set=$is_unity_license_set" >> $GITHUB_OUTPUT
  test:
    name: Run all tests âœ¨
    runs-on: ubuntu-latest
    needs: checklicense
    if: needs.checklicense.outputs.is_unity_license_set == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-test
      - uses: game-ci/unity-test-runner@v4
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: auto
      - uses: actions/upload-artifact@v4
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
  build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    needs: test
    if: needs.checklicense.outputs.is_unity_license_set == 'true'
    strategy:
      fail-fast: false
      matrix:
        include:
          - targetPlatform: WebGL
            unityVersion: auto
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          unityVersion: ${{ matrix.unityVersion || '' }}
          customImage: ${{ matrix.customImage || '' }}
      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build
  deploy:
    name: Deploy WebGL to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: needs.checklicense.outputs.is_unity_license_set == 'true'
    permissions:
      contents: write
      pages: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download WebGL build
        uses: actions/download-artifact@v4
        with:
          name: Build-WebGL
          path: build
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/WebGL
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4